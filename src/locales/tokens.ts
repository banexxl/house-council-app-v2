export const tokens = {
  common: {
    languageChanged: 'common.languageChanged',
    title: 'common.title',
    all: 'common.all',
    selectAll: 'common.selectAll',
    deselectAll: 'common.deselectAll',
    fullName: 'common.fullName',
    address: 'common.address',
    created_at: 'common.createdAt',
    updated_at: 'common.updatedAt',
    search: 'common.search',
    sortBy: 'common.sortBy',
    rowsPerPage: 'common.rowsPerPage',
    emptyTableInfo: 'common.emptyTableInfo',
    formBasicInfo: 'common.formBasicInfo',
    formAdvancedInfo: 'common.formAdvancedInfo',
    btnSave: 'common.btnSave',
    btnDelete: 'common.btnDelete',
    btnEdit: 'common.btnEdit',
    btnCancel: 'common.btnCancel',
    btnConfirm: 'common.btnConfirm',
    btnCreate: 'common.btnCreate',
    btnClose: 'common.btnClose',
    btnReset: 'common.btnReset',
    btnSubmit: 'common.btnSubmit',
    btnNext: 'common.btnNext',
    btnPrevious: 'common.btnPrevious',
    btnBack: 'common.btnBack',
    btnContinue: 'common.btnContinue',
    btnAccept: 'common.btnAccept',
    lblGeneral: 'account.lblGeneral',
    lblNotifications: 'account.lblNotifications',
    btnDecline: 'common.btnDecline',
    btnDownload: 'common.btnDownload',
    btnUpload: 'common.btnUpload',
    btnAdd: 'common.btnAdd',
    btnUpdate: 'common.btnUpdate',
    btnRemove: 'common.btnRemove',
    btnRemoveAll: 'common.btnRemoveAll',
    logout: 'common.logout',
    loggingOut: 'common.loggingOut',
    btnSearch: 'common.btnSearch',
    btnClear: 'common.btnClear',
    btnImport: 'common.btnImport',
    btnExport: 'common.btnExport',
    btnExportDocx: 'common.btnExportDocx',
    btnExportPdf: 'common.btnExportPdf',
    btnBackHome: 'common.btnBackHome',
    lblName: 'common.lblName',
    lblDescription: 'common.lblDescription',
    lblActions: 'common.lblActions',
    lblAmenity: 'common.lblAmenity',
    lblStatus: 'common.lblStatus',
    lblCoverImage: 'common.lblCoverImage',
    lblImages: 'common.lblImages',
    lblCity: 'common.lblCity',
    lblState: 'common.lblState',
    lblCountry: 'common.lblCountry',
    lblZipCode: 'common.lblZipCode',
    lblAddress: 'common.lblAddress',
    lblPhone: 'common.lblPhone',
    lblEmail: 'common.lblEmail',
    lblWebsite: 'common.lblWebsite',
    lblPrice: 'common.lblPrice',
    lblCurrency: 'common.lblCurrency',
    lblQuantity: 'common.lblQuantity',
    lblDate: 'common.lblDate',
    lblTime: 'common.lblTime',
    lblStartDate: 'common.lblStartDate',
    lblEndDate: 'common.lblEndDate',
    lblStartTime: 'common.lblStartTime',
    lblEndTime: 'common.lblEndTime',
    lblDuration: 'common.lblDuration',
    lblHasElevator: 'common.lblHasElevator',
    lblHasBicycleRoom: 'common.lblHasBicycleRoom',
    lblHasParkingLot: 'common.lblHasParkingLot',
    lblHasGasHeating: 'common.lblHasGasHeating',
    lblHasCentralHeating: 'common.lblHasCentralHeating',
    lblRecentlyBuilt: 'common.lblRecentlyBuilt',
    lblHasElectricHeating: 'common.lblHasElectricHeating',
    lblHasSolarPower: 'common.lblHasSolarPower',
    lblHasPreHeatedWater: 'common.lblHasPreHeatedWater',
    lblVacant: 'common.lblVacant',
    lblPartiallyLeased: 'common.lblPartiallyLeased',
    lblRenovation: 'common.lblRenovation',
    lblUnderConstruction: 'common.lblUnderConstruction',
    lblActive: 'common.lblActive',
    lblTemporary: 'common.lblTemporary',
    lblHistorical: 'common.lblHistorical',
    lblCondemned: 'common.lblCondemned',
    lblForSale: 'common.lblForSale',
    lblLeased: 'common.lblLeased',
    lblPlanned: 'common.lblPlanned',
    lblDemolished: 'common.lblDemolished',
    lblRestrictedAccess: 'common.lblRestrictedAccess',
    lblInactive: 'common.lblInactive',
    lblUnderInspection: 'common.lblUnderInspection',
    lblUploadedImages: 'common.lblUploadedImages',
    lblNoImagesUploaded: 'common.lblNoImagesUploaded',
    lblApartmentCount: 'common.lblApartmentCount',
    lblMaximumApartmentsPerFloor: 'common.lblMaximumApartmentsPerFloor',
    lblHasGroundFloorApartments: 'common.lblHasGroundFloorApartments',
    lblYes: 'common.lblYes',
    lblNo: 'common.lblNo',
    lblFilters: 'common.lblFilters',
    lblClientAccountActions: 'common.lblClientAccountActions',
    notes: 'common.notes',
    settings: 'common.settings',
    actionClickToUploadOrDragAndDrop: 'common.actionClickToUploadOrDragAndDrop',
    actionDeleteSuccess: 'common.actionDeleteSuccess',
    actionDeleteError: 'common.actionDeleteError',
    actionCreateSuccess: 'common.actionCreateSuccess',
    actionCreateError: 'common.actionCreateError',
    actionUpdateSuccess: 'common.actionUpdateSuccess',
    actionUpdateError: 'common.actionUpdateError',
    actionSaveSuccess: 'common.actionSaveSuccess',
    actionSaveError: 'common.actionSaveError',
    actionSubmitSuccess: 'common.actionSubmitSuccess',
    actionSubmitError: 'common.actionSubmitError',
    actionResetSuccess: 'common.actionResetSuccess',
    actionResetError: 'common.actionResetError',
    actionRemove: 'common.actionRemove',
    actionDownloadSuccess: 'common.actionDownloadSuccess',
    actionDownloadError: 'common.actionDownloadError',
    actionUploadSuccess: 'common.actionUploadSuccess',
    actionUploadError: 'common.actionUploadError',
    actionImportSuccess: 'common.actionImportSuccess',
    actionImportError: 'common.actionImportError',
    actionExportSuccess: 'common.actionExportSuccess',
    actionExportError: 'common.actionExportError',
    actionSetAsCover: 'common.actionSetAsCover',
    tableFilterAmenities: 'common.tableFilterAmenities',
    tableFilterStatus: 'common.tableFilterStatus',
    tableFilterSpecification: 'common.tableFilterSpecification',
    tableFilterNoFilterSelected: 'common.tableFilterNoFilterSelected',
    filterSearchByName: 'common.filterSearchByName',
    filterSearchByAddress: 'common.filterSearchByAddress',
  },
  account: {
    security: {
      lblSecurity: 'account.security.lblSecurity',
      changePassword: 'account.security.changePassword',
      changePasswordHint: 'account.security.changePasswordHint',
      passwordStrength: 'account.security.passwordStrength',
      confirmNewPassword: 'account.security.confirmNewPassword',
      resetPassword: 'account.security.resetPassword',
      resetPasswordSuccess: 'account.security.resetPasswordSuccess',
      resetPasswordError: 'account.security.resetPasswordError',
      passwordRequirements: 'account.security.passwordRequirements',
      twoFactorAuth: 'account.security.twoFactorAuth',
      twoFactorAuthHint: 'account.security.twoFactorAuthHint',
      enable2fa: 'account.security.enable2fa',
      enabling: 'account.security.enabling',
      verify: 'account.security.verify',
      verifying: 'account.security.verifying',
      codeLabel: 'account.security.codeLabel',
      twofaEnabled: 'account.security.twofaEnabled',
      disable2fa: 'account.security.disable2fa',
      disabling: 'account.security.disabling',
      confirmDisable: 'account.security.confirmDisable',
      missingFactorId: 'account.security.missingFactorId',
      challengeFailed: 'account.security.challengeFailed',
      verificationFailed: 'account.security.verificationFailed',
      disableFailed: 'account.security.disableFailed',
      twofaEnabledSuccess: 'account.security.twofaEnabledSuccess',
      twofaDisabledSuccess: 'account.security.twofaDisabledSuccess',
      unexpectedDisableError: 'account.security.unexpectedDisableError',
      qrCodeAlt: 'account.security.qrCodeAlt',
      twofaRequired: 'account.security.twofaRequired',
      noValidFactor: 'account.security.noValidFactor',
      loginHistoryTitle: 'account.security.loginHistoryTitle',
      loginHistorySubtitle: 'account.security.loginHistorySubtitle',
      loginHistoryTime: 'account.security.loginHistoryTime',
      loginHistoryIp: 'account.security.loginHistoryIp',
      loginHistoryLocation: 'account.security.loginHistoryLocation',
      deleteAccountSection: 'account.security.deleteAccountSection',
    },
    lblGeneral: 'account.lblGeneral',
    lblBilling: 'account.lblBilling',
    lblTeam: 'account.lblTeam',
    lblNotifications: 'account.lblNotifications',
    lblSecurity: 'account.lblSecurity',
    deleteAccount: 'account.deleteAccount',
    deleteAccountConfirmLabel: 'account.deleteAccountConfirmLabel',
    deleteAccountConfirmButton: 'account.deleteAccountConfirmButton',
    deleteAccountConfirmInstruction: 'account.deleteAccountConfirmInstruction',
    deleteAccountError: 'account.deleteAccountError',
    deleteAccountSuccess: 'account.deleteAccountSuccess',
    billingTableTitle: 'account.billingTableTitle',
    billingTableSubtitle: 'account.billingTableSubtitle',
    team: {
      lblTeam: 'account.team.lblTeam',
      btnResetPassword: 'account.team.btnResetPassword',
      memberDeleted: 'account.team.memberDeleted',
      memberDeleteError: 'account.team.memberDeleteError',
      passwordResetSent: 'account.team.passwordResetSent',
      passwordResetError: 'account.team.passwordResetError',
      membersTableTitle: 'account.team.membersTableTitle',
      membersTableSubtitle: 'account.team.membersTableSubtitle',
      inviteMembers: 'account.team.inviteMembers',
      editorSeatsInfo: 'account.team.editorSeatsInfo',
      sendInvite: 'account.team.sendInvite',
      inviteSuccess: 'account.team.inviteSuccess',
      inviteError: 'account.team.inviteError',
    },
    billing: {
      lblBilling: 'account.billing.lblBilling',
      billingName: 'account.billing.billingName',
      cardNumber: 'account.billing.cardNumber',
      billingAddress: 'account.billing.billingAddress',
      deleteTitle: 'account.billing.deleteTitle',
      deleteMessage: 'account.billing.deleteMessage',
      deleteConfirm: 'account.billing.deleteConfirm',
      deleteCancel: 'account.billing.deleteCancel',
      deleteSuccess: 'account.billing.deleteSuccess',
      invoiceHistoryTitle: 'account.billing.invoiceHistoryTitle',
      invoiceHistorySubheader: 'account.billing.invoiceHistorySubheader',
      invoiceDate: 'account.billing.invoiceDate',
      invoiceTotal: 'account.billing.invoiceTotal',
      invoiceBillingInfo: 'account.billing.invoiceBillingInfo',
      invoiceClient: 'account.billing.invoiceClient',
      invoiceView: 'account.billing.invoiceView',
      noInvoices: 'account.billing.noInvoices',
      noFeatures: 'account.billing.noFeatures',
      upgradeNow: 'account.billing.upgradeNow',
      upgradePlan: 'account.billing.upgradePlan',
      changePlanTitle: 'account.billing.changePlanTitle',
      changePlanSubheader: 'account.billing.changePlanSubheader',
      usingNow: 'account.billing.usingNow',
      refundNote: 'account.billing.refundNote',
      cancel: 'account.billing.cancel',
    }
  },
  nav: {
    home: 'nav.home',
    academy: 'nav.academy',
    account: 'nav.account',
    adminDashboard: 'nav.adminDashboard',
    analytics: 'nav.analytics',
    announcements: 'nav.announcements',
    auth: 'nav.auth',
    apartments: 'nav.apartments',
    apartment: 'nav.apartment',
    apartmentAdd: 'nav.apartmentAdd',
    billingInformation: 'nav.billingInformation',
    buildings: 'nav.buildings',
    building: 'nav.building',
    buildingAdd: 'nav.buildingAdd',
    blog: 'nav.blog',
    browse: 'nav.browse',
    calendar: 'nav.calendar',
    chat: 'nav.chat',
    checkout: 'nav.checkout',
    clientDashboard: 'nav.clientDashboard',
    clientSettings: 'nav.clientSettings',
    tenants: 'nav.tenants',
    tenantAdd: 'nav.tenantAdd',
    contact: 'nav.contact',
    course: 'nav.course',
    create: 'nav.create',
    crypto: 'nav.crypto',
    clients: 'nav.clients',
    dashboard: 'nav.dashboard',
    details: 'nav.details',
    ecommerce: 'nav.ecommerce',
    edit: 'nav.edit',
    error: 'nav.error',
    feed: 'nav.feed',
    fileManager: 'nav.fileManager',
    files: 'nav.files',
    finance: 'nav.finance',
    fleet: 'nav.fleet',
    forgotPassword: 'nav.forgotPassword',
    invoiceList: 'nav.invoices',
    jobList: 'nav.jobList',
    kanban: 'nav.kanban',
    list: 'nav.list',
    locations: 'nav.locations',
    location: 'nav.location',
    locationAdd: 'nav.locationAdd',
    login: 'nav.login',
    logistics: 'nav.logistics',
    mail: 'nav.mail',
    management: 'nav.management',
    orderList: 'nav.orders',
    overview: 'nav.overview',
    pages: 'nav.pages',
    postCreate: 'nav.postCreate',
    postDetails: 'nav.postDetails',
    postList: 'nav.postList',
    pricing: 'nav.pricing',
    productList: 'nav.products',
    profile: 'nav.profile',
    register: 'nav.register',
    resetPassword: 'nav.resetPassword',
    subscriptions: 'nav.subscriptions',
    socialMedia: 'nav.socialMedia',
    verifyCode: 'nav.verifyCode',
  },
  apartments: {
    lblApartmentNumber: 'apartments.lblApartmentNumber',
    lblCoverImage: 'apartments.lblCoverImage',
    lblFloor: 'apartments.lblFloor',
    lblSizeM2: 'apartments.lblSizeM2',
    lblRooms: 'apartments.lblRooms',
    lblType: 'apartments.lblType',
    lblNotes: 'apartments.lblNotes',
    lblRentalStatus: 'apartments.lblRentalStatus',
    lblResidential: 'apartments.lblResidential',
    lblBusiness: 'apartments.lblBusiness',
    lblMixedUse: 'apartments.lblMixedUse',
    lblVacation: 'apartments.lblVacation',
    lblStorage: 'apartments.lblStorage',
    lblGarage: 'apartments.lblGarage',
    lblUtility: 'apartments.lblUtility',
    lblOwned: 'apartments.lblOwned',
    lblRented: 'apartments.lblRented',
    lblForRent: 'apartments.lblForRent',
    lblVacant: 'apartments.lblVacant',
    lblApartmentListEmpty: 'apartments.lblApartmentListEmpty',
    lblApartmentTypeBusiness: 'apartments.lblApartmentTypeBusiness',
    lblApartmentTypeResidential: 'apartments.lblApartmentTypeResidential',
    lblApartmentTypeMixedUse: 'apartments.lblApartmentTypeMixedUse',
    lblApartmentTypeVacation: 'apartments.lblApartmentTypeVacation',
    lblApartmentTypeStorage: 'apartments.lblApartmentTypeStorage',
    lblApartmentTypeGarage: 'apartments.lblApartmentTypeGarage',
    lblApartmentTypeUtility: 'apartments.lblApartmentTypeUtility',
    filterSearchByApartmentNumber: 'apartments.filterSearchByApartmentNumber',
    tableFilterNoFilterSelected: 'apartments.tableFilterNoFilterSelected',
    apartmentsTitle: 'apartments.apartmentsTitle',
    apartmentList: 'apartments.apartmentList',
    apartmentCreate: 'apartments.apartmentCreate',
    apartmentEdit: 'apartments.apartmentEdit',
    apartmentDetails: 'apartments.apartmentDetails',
  },
  buildings: {
    buildingsTitle: 'buildings.buildingsTitle',
    buildingList: 'buildings.buildingList',
    buildingDetails: 'buildings.buildingDetails',
    buildingCreate: 'buildings.buildingCreate',
    buildingEdit: 'buildings.buildingEdit',
    buildingStats: 'buildings.buildingStats',
    buildingStories: 'buildings.buildingStories',
    numberOfApartments: 'buildings.numberOfApartments',
    buildingStatus: 'buildings.buildingStatus',
    lblBuildingStatusVacant: 'buildings.lblBuildingStatusVacant',
    lblBuildingStatusPartiallyLeased: 'buildings.lblBuildingStatusPartiallyLeased',
    lblBuildingStatusRenovation: 'buildings.lblBuildingStatusRenovation',
    lblBuildingStatusUnderConstruction: 'buildings.lblBuildingStatusUnderConstruction',
    lblBuildingStatusActive: 'buildings.lblBuildingStatusActive',
    lblBuildingStatusTemporary: 'buildings.lblBuildingStatusTemporary',
    lblBuildingStatusCondemned: 'buildings.lblBuildingStatusCondemned',
    lblBuildingStatusForSale: 'buildings.lblBuildingStatusForSale',
    lblBuildingStatusLeased: 'buildings.lblBuildingStatusLeased',
    lblBuildingStatusPlanned: 'buildings.lblBuildingStatusPlanned',
    lblBuildingStatusDemolished: 'buildings.lblBuildingStatusDemolished',
    lblBuildingStatusRestrictedAccess: 'buildings.lblBuildingStatusRestrictedAccess',
    lblBuildingStatusInactive: 'buildings.lblBuildingStatusInactive',
    lblBuildingStatusUnderInspection: 'buildings.lblBuildingStatusUnderInspection',
    lblBuildingStatusHistorical: 'buildings.lblBuildingStatusHistorical',
    yupBuildingLocationRequired: 'buildings.yupBuildingLocationRequired',
    yupBuildingDescriptionRequired: 'buildings.yupBuildingDescriptionRequired',
    yupBuildingStoriesHighRequired: 'buildings.yupBuildingStoriesHighRequired',
    yupBuildingNumberOfApartmentsRequired: 'buildings.yupBuildingNumberOfApartmentsRequired',
    yupBuildingMaxApartmentsPerFloorRequired: 'buildings.yupBuildingMaxApartmentsPerFloorRequired',
    yupBuildingStatusRequired: 'buildings.yupBuildingStatusRequired',
    yupBuildingNumberOfApartmentsMaxCheck: 'buildings.yupBuildingNumberOfApartmentsMaxCheck',
    yupBuildingMaxApartmentsPerFloorMaxCheck: 'buildings.yupBuildingMaxApartmentsPerFloorMaxCheck',
    yupBuildingHasGroundFloorApartmentsRequired: 'buildings.yupBuildingHasGroundFloorApartmentsRequired',
  },
  locations: {
    geoLocationAvailable: 'locations.geoLocationAvailable',
    geoLocationNotAvailable: 'locations.geoLocationNotAvailable',
    locationSelected: 'locations.locationSelected',
    locationsTitle: 'locations.locationsTitle',
    locationList: 'locations.locationList',
    locationDetails: 'locations.locationDetails',
    locationCreate: 'locations.locationCreate',
    locationsChooseAddress: 'locations.locationsChooseAddress',
    locationEdit: 'locations.locationEdit',
    locationChosenAddress: 'locations.locationChosenAddress',
    locationCity: 'locations.locationCity',
    locationState: 'locations.locationState',
    locationCountry: 'locations.locationCountry',
    locationZipCode: 'locations.locationZipCode',
    locationStreet: 'locations.locationStreet',
    locationStreetNumber: 'locations.locationStreetNumber',
    locationPostalCode: 'locations.locationPostalCode',
    locationSaved: 'locations.locationSaved',
    locationNotSaved: 'locations.locationNotSaved',
    locationNotSavedUniqueConstraint: 'errors.location.uniqueConstraint',
    locationNotSavedForeignKeyViolation: 'errors.location.foreignKeyViolation',
    locationNotSavedNotNullViolation: 'errors.location.notNullViolation',
    locationNotSavedDataTypeMismatch: 'errors.location.dataTypeMismatch',
    locationNotSavedCheckViolation: 'errors.location.checkViolation',
    locationNotSavedUnexpectedError: 'errors.location.unexpectedError',
    locationSuccessfullySaved: 'locations.locationSuccessfullySaved',
    locationDeleteConfirmation: 'locations.locationDeleteConfirmation',
    locationDeletedSuccessfully: 'locations.locationDeletedSuccessfully',
    locationNotDeleted: 'locations.locationNotDeleted',
    locationAddress: 'locations.locationAddress',
    locationPopupTitle: 'locations.locationPopupTitle',
    locationAlreadyExists: 'locations.locationAlreadyExists',
    locationTaken: 'locations.locationTaken',
    searchLocationLabel: 'locations.searchLocationLabel',
    addLocationsFirstLabel: 'locations.addLocationsFirstLabel',
    tableFilterNoFilterSelected: 'locations.tableFilterNoFilterSelected',
    loadingLocation: 'locations.loadingLocation',
    // Apartment validation
    apartmentFloorTooHigh: 'apartments.errors.apartmentFloorTooHigh',
    apartmentRoomCountTooHigh: 'apartments.errors.apartmentRoomCountTooHigh',
    apartmentInvalidImageUrl: 'apartments.errors.apartmentInvalidImageUrl',
    required: 'common.required',
  },
  clients: {
    client: 'clients.client',
    clientsList: 'clients.clientsList',
    clientDetails: 'clients.clientDetails',
    clientCreate: 'clients.clientCreate',
    clientEdit: 'clients.clientEdit',
    clientDelete: 'clients.clientDelete',
    clientAddPaymentMethod: 'clients.clientAddPaymentMethod',
    clientEditPaymentMethod: 'clients.clientEditPaymentMethod',
    clientBillingInformationList: 'clients.clientBillingInformationList',
    clientBillingInformationDetails: 'clients.clientBillingInformationDetails',
    clientBillingInformationCreate: 'clients.clientBillingInformationCreate',
    clientBillingInformationEdit: 'clients.clientBillingInformationEdit',
    clientComponentSettings: 'clients.clientComponentSettings',
    clientComponentSettingsShortDescription: 'clients.clientComponentSettingsShortDescription',
    clientStatusesTableName: 'clients.clientStatusesTableName',
    clientTypesTableName: 'clients.clientTypesTableName',
    clientRolesTableName: 'clients.clientRolesTableName',
    clientPaymentMethodsTableName: 'clients.clientPaymentMethodsTableName',
    clientBillingInformationStatusesTableName: 'clients.clientBillingInformationStatusesTableName',
    invoiceStatusesTableName: 'clients.invoiceStatusesTableName',
    featuresTableName: 'clients.featuresTableName',
    buildingStatusesTableName: 'clients.buildingStatusesTableName',
    // Client form
    clientFormSettings: 'clients.clientFormSettings',
    clientType: 'clients.clientType',
    clientStatus: 'clients.clientStatus',
    clientRole: 'clients.clientRole',
    clientName: 'clients.clientName',
    clientContactPerson: 'clients.clientContactPerson',
    clientEmail: 'clients.clientEmail',
    clientPhone: 'clients.clientPhone',
    clientMobilePhone: 'clients.clientMobilePhone',
    clientAddress1: 'clients.clientAddress1',
    clientAddress2: 'clients.clientAddress2',
    clientCity: 'clients.clientCity',
    clientPostalCode: 'clients.clientPostalCode',
    clientState: 'clients.clientState',
    clientCountry: 'clients.clientCountry',
    clientHasAcceptedMarketing: 'clients.clientHasAcceptedMarketing',
    clientHasAcceptedTermsAndConditions: 'clients.clientHasAcceptedTermsAndConditions',
    clientHasAcceptedTermsAndConditionsDescription: 'clients.clientHasAcceptedTermsAndConditionsDescription',
    clientIsPotential: 'clients.clientIsPotential',
    clientIsReturning: 'clients.clientIsReturning',
    clientIsVerified: 'clients.clientIsVerified',
    clientIsVerifiedDescription: 'clients.clientIsVerifiedDescription',
    clientTotalSpent: 'clients.clientTotalSpent',
    clientTotalOrders: 'clients.clientTotalOrders',
    clientAvatar: 'clients.clientAvatar',
    clientUploadAvatar: 'clients.clientUploadAvatar',
    clientSubscriptionPlan: 'clients.clientSubscriptionPlan',
    clientBillingInformation: 'clients.clientBillingInformation',
    clientPaymentMethods: 'clients.clientPaymentMethods',
    clientPaymentMethod: 'clients.clientPaymentMethod',
    clientTypeAgency: 'clients.lblClientTypeAgency',
    clientTypeBusiness: 'clients.lblClientTypeBusiness',
    clientTypeEnterprise: 'clients.lblClientTypeEnterprise',
    clientTypeIndividual: 'clients.lblClientTypeIndividual',
    clientStatusCancelled: 'clients.lblClientStatusCancelled',
    clientStatusPendingActivation: 'clients.lblClientStatusPendingActivation',
    clientStatusSuspended: 'clients.lblClientStatusSuspended',
    clientStatusTrial: 'clients.lblClientStatusTrial',
    noClientData: 'clients.noClientData',
    clientUnassignedLocations: 'clients.clientUnassignedLocations',
    clientStatusPendingPayment: 'clients.lblClientStatusPendingPayment',
    clientStatusArchived: 'clients.lblClientStatusArchived',
    clientStatusActive: 'clients.lblClientStatusActive',
    clientStatusAwaitingApproval: 'clients.lblClientStatusAwaitingApproval',
    clientStatusInactive: 'clients.lblClientStatusInactive',
    clientStatusBanned: 'clients.lblClientStatusBanned',
    clientStatusBlocked: 'clients.lblClientStatusBlocked',
    clientStatusVIP: 'clients.lblClientStatusVIP',
    clientStatusReactivated: 'clients.lblClientStatusReactivated',
    clientStatusDormant: 'clients.lblClientStatusDormant',
    clientPaymentMethodNotSelected: 'payments.lblPaymentMethodNotSelected',
    clientPaymentMethodCash: 'payments.lblPaymentMethodCash',
    clientPaymentMethodWireTransfer: 'payments.lblPaymentMethodWireTransfer',
    clientPaymentMethodBankTransfer: 'payments.lblPaymentMethodBankTransfer',
    clientPaymentMethodInvoiceBilling: 'payments.lblPaymentMethodInvoiceBilling',
    clientPaymentMethodPayPal: 'payments.lblPaymentMethodPayPal',
    clientPaymentMethodCheck: 'payments.lblPaymentMethodCheck',
    clientPaymentMethodCryptocurrency: 'payments.lblPaymentMethodCryptocurrency',
    clientPaymentMethodCreditCard: 'payments.lblPaymentMethodCreditCard',
    clientBillingInformationStatusActive: 'clients.billingInformationStatusActive',
    clientBillingInformationStatusInactive: 'clients.billingInformationStatusInactive',
    clientBillingInformationStatusPending: 'clients.billingInformationStatusPending',
    clientBillingInformationStatusSuspended: 'clients.billingInformationStatusSuspended',
    // Client validation
    clientNameRequired: 'clients.clientNameRequired',
    clientEmailMustBeValid: 'clients.clientEmailMustBeValid',
    clientEmailRequired: 'clients.clientEmailRequired',
    cliendAddressRequired: 'clients.cliendAddressRequired',
    clientMobilePhoneRequired: 'clients.clientMobilePhoneRequired',
    clientCityRequired: 'clients.clientCityRequired',
    clientCountryRequired: 'clients.clientCountryRequired',
    clientTypeRequired: 'clients.clientTypeRequired',
    clientContactPersonRequired: 'clients.clientContactPersonRequired',
    clientStatusRequired: 'clients.clientStatusRequired',
    clientSubscriptionPlanRequired: 'clients.clientSubscriptionPlanRequired',
    clientBillingInformationRequired: 'clients.clientBillingInformationRequired',
    clientFillMandatoryFieldsFirst: 'clients.clientFillMandatoryFieldsFirst',
    clientSaveClientFirst: 'clients.clientSaveClientFirst',
    clientCardNumber: 'clients.clientCardNumber',
    clientCardExpirationDate: 'clients.clientCardExpirationDate',
    clientBillingStatus: 'clients.clientBillingStatus',
    clientPaymentMethodSaved: 'clients.clientPaymentMethodSaved',
    clientPaymentMethodClientIdRequired: 'clients.clientPaymentMethodClientIdRequired',
    clientPaymentMethodCardNumberRequired: 'clients.clientPaymentMethodCardNumberRequired',
    clientPaymentMethodCardExpirationDateRequired: 'clients.clientPaymentMethodCardExpirationDateRequired',
    clientPaymentMethodCvcRequired: 'clients.clientPaymentMethodCvcRequired',
    clientPaymentMethodFullNameRequired: 'clients.clientPaymentMethodFullNameRequired',
    clientPaymentMethodAddressRequired: 'clients.clientPaymentMethodAddressRequired',
    clientPaymentMethodCardNumber16DigitsRequired: 'clients.clientPaymentMethodCardNumber16DigitsRequired',
    clientPaymentMethodCardExpirationDateFutureDateRequired: 'clients.clientPaymentMethodCardExpirationDateFutureDateRequired',
    clientPaymentMethodCvc3DigitsRequired: 'clients.clientPaymentMethodCvc3DigitsRequired',
    clientSettingsSaveSuccess: 'clients.clientSettingsSaveSuccess',
    clientSettingsSaveError: 'clients.clientSettingsSaveError',
    clientSettingsAlreadyExists: 'clients.clientSettingsAlreadyExists',
    clientSettingsDeleteSuccess: 'clients.clientSettingsDeleteSuccess',
    clientSettingsDeleteError: 'clients.clientSettingsDeleteError',
    clientSettingsDeleteWarning: 'clients.clientSettingsDeleteWarning',
    clientSettingsNewSuccess: 'clients.clientSettingsNewSuccess',
    clientSettingsNewError: 'clients.clientSettingsNewError',
    clientSettingsNoTableError: 'clients.clientSettingsNoTableError',
    clientSettingsNoEntityError: 'clients.clientSettingsNoEntityError',
    clientSettingsNoNameError: 'clients.clientSettingsNoNameError',
    // Client popup
    clientSave: 'clients.clientSave',
    clientSaved: 'clients.clientSaved',
    clientNotSaved: 'clients.clientNotSaved',
    clientAlreadyExists: 'clients.clientAlreadyExists',
    sendPasswordRecovery: 'clients.sendPasswordRecovery',
    sendPasswordRecoveryDescription: 'clients.sendPasswordRecoveryDescription',
    confirmSendPasswordRecovery: 'clients.confirmSendPasswordRecovery',
    passwordRecoverySent: 'clients.passwordRecoverySent',
    sendMagicLink: 'clients.sendMagicLink',
    sendMagicLinkDescription: 'clients.sendMagicLinkDescription',
    confirmSendMagicLink: 'clients.confirmSendMagicLink',
    magicLinkSent: 'clients.magicLinkSent',
    removeMfa: 'clients.removeMfa',
    removeMfaDescription: 'clients.removeMfaDescription',
    confirmRemoveMfa: 'clients.confirmRemoveMfa',
    mfaRemoved: 'clients.mfaRemoved',
    banUser: 'clients.banUser',
    banUserDescription: 'clients.banUserDescription',
    confirmBanUser: 'clients.confirmBanUser',
    userBanned: 'clients.userBanned',
    unbanUser: 'clients.unbanUser',
    unbanUserDescription: 'clients.unbanUserDescription',
    confirmUnbanUser: 'clients.confirmUnbanUser',
    userUnbanned: 'clients.userUnbanned',
  },
  subscriptionPlans: {
    subscriptionPlansList: 'subscriptionPlans.subscriptionPlansList',
    subscriptionPlanDetails: 'subscriptionPlans.subscriptionPlanDetails',
    subscriptionPlanCreate: 'subscriptionPlans.subscriptionPlanCreate',
    subscriptionPlanEdit: 'subscriptionPlans.subscriptionPlanEdit',
    subscriptionPlanDelete: 'subscriptionPlans.subscriptionPlanDelete',
    subscriptionPlanStatusesTableName: 'subscriptionPlans.subscriptionPlanStatusesTableName',
    subscriptionPlanList: 'subscriptionPlans.subscriptionPlanList',
    subscriptionPlanName: 'subscriptionPlans.subscriptionPlanName',
    subscriptionPlanDescription: 'subscriptionPlans.subscriptionPlanDescription',
    subscriptionPlanBasePrice: 'subscriptionPlans.subscriptionPlanBasePrice',
    subscriptionPlanPricingOptions: 'subscriptionPlans.subscriptionPlanPricingOptions',
    subscriptionPlanTotalPrice: 'subscriptionPlans.subscriptionPlanTotalPrice',
    subscriptionPlanCurrency: 'subscriptionPlans.subscriptionPlanCurrency',
    subscriptionPlanStatus: 'subscriptionPlans.subscriptionPlanStatus',
    susbcriptionPlanMaxNumberOfAppartments: 'subscriptionPlans.susbcriptionPlanMaxNumberOfAppartments',
    subscriptionPlanFeatures: 'subscriptionPlans.subscriptionPlanFeatures',
    subscriptionPlanFeature: 'subscriptionPlans.subscriptionPlanFeature',
    subscriptionPlanYearlyDiscount: 'subscriptionPlans.subscriptionPlanYearlyDiscount',
    subscriptionPlanYearlyBilling: 'subscriptionPlans.subscriptionPlanYearlyBilling',
    subscriptionPlanIsDiscounted: 'subscriptionPlans.subscriptionPlanIsDiscounted',
    subscriptionPlanDiscountPercentage: 'subscriptionPlans.subscriptionPlanDiscountPercentage',
    subscriptionPlanDiscountedPrice: 'subscriptionPlans.subscriptionPlanDiscountedPrice',
    subscriptionPlanPricePerMonth: 'subscriptionPlans.subscriptionPlanPricePerMonth',
    subscriptionPlanMonthly: 'subscriptionPlans.subscriptionPlanMonthly',
    subscriptionPlanYearly: 'subscriptionPlans.subscriptionPlanYearly',
    subscriptionPlanStatusPromo: 'subscriptionPlans.statusPromo',
    subscriptionPlanStatusInactive: 'subscriptionPlans.statusInactive',
    subscriptionPlanStatusArchived: 'subscriptionPlans.statusArchived',
    subscriptionPlanStatusScheduled: 'subscriptionPlans.statusScheduled',
    subscriptionPlanStatusTrial: 'subscriptionPlans.statusTrial',
    subscriptionPlanStatusActive: 'subscriptionPlans.statusActive',
  },
  tenants: {
    tenantsList: 'tenants.tenantsList',
    tenantDetails: 'tenants.tenantDetails',
    tenantCreate: 'tenants.tenantCreate',
    tenantEdit: 'tenants.tenantEdit',
    tenantDelete: 'tenants.tenantDelete',
    tenantTypeOwner: 'tenants.lblOwner',
    tenantTypeRenter: 'tenants.lblRenter',
    tenantTypeRelative: 'tenants.lblRelative',
    tenantTypeOther: 'tenants.lblOther',
    // Tenant form
    formTitle: 'tenants.formTitle',
    selectBuilding: 'tenants.selectBuilding',
    selectApartment: 'tenants.selectApartment',
    firstName: 'tenants.firstName',
    lastName: 'tenants.lastName',
    birthDate: 'tenants.birthDate',
    email: 'tenants.email',
    tenantPhoneNumber: 'tenants.tenantPhoneNumber',
    tenantIsPrimary: 'tenants.tenantIsPrimary',
    tenantIsPrimaryDescription: 'tenants.tenantIsPrimaryDescription',
    tenantType: 'tenants.tenantType',
    tenantSaved: 'tenants.tenantSaved',
    tenantNotSaved: 'tenants.tenantNotSaved',
    phoneNumberMustStartWithPlusAndNumbersOnly: 'tenants.phoneNumberMustStartWithPlusAndNumbersOnly',
    phoneAlreadyExists: 'tenants.phoneAlreadyExists',
    tenantAlreadyExists: 'tenants.tenantAlreadyExists',

    // Tenant validation
    tenantNameRequired: 'tenants.tenantNameRequired',
    tenantFirstNameRequired: 'tenants.firstNameRequired',
    tenantLastNameRequired: 'tenants.lastNameRequired',
    tenantEmailMustBeValid: 'tenants.emailMustBeValid',
    tenantEmailRequired: 'tenants.emailRequired',
    tenantDateOfBirthRequired: 'tenants.dateOfBirthRequired',
    tenantApartmentRequired: 'tenants.apartmentRequired',
    tenantIsPrimaryRequired: 'tenants.isPrimaryRequired',
    tenantPhoneNumberRequired: 'tenants.phoneNumberRequired',
  },
  notifications: {
    centerTitle: 'notifications.centerTitle',
    popoverTitle: 'notifications.popoverTitle',
    markAllAsRead: 'notifications.markAllAsRead',
    none: 'notifications.none',
    viewAll: 'notifications.viewAll',
    remove: 'notifications.remove',
    markRead: 'notifications.markRead',
    markUnread: 'notifications.markUnread',
    deleteConfirmTitle: 'notifications.deleteConfirmTitle',
    deleted: 'notifications.deleted',
    markedRead: 'notifications.markedRead',
    markedUnread: 'notifications.markedUnread',
    tableTitle: 'notifications.tableTitle',
    tableSubtitle: 'notifications.tableSubtitle',
    tabs: {
      all: 'notifications.tabs.all',
      system: 'notifications.tabs.system',
      message: 'notifications.tabs.message',
      reminder: 'notifications.tabs.reminder',
      alert: 'notifications.tabs.alert',
      announcement: 'notifications.tabs.announcement',
      other: 'notifications.tabs.other',
    },
    col: {
      title: 'notifications.col.title',
      description: 'notifications.col.description',
      created: 'notifications.col.created',
      read: 'notifications.col.read',
      type: 'notifications.col.type',
      scheduledFor: 'notifications.col.scheduledFor',
      sender: 'notifications.col.sender',
      receiver: 'notifications.col.receiver',
      severity: 'notifications.col.severity',
    }
  },
  announcements: {
    managementTitle: 'announcements.managementTitle',
    createNew: 'announcements.createNew',
    uploadingImages: 'announcements.uploadingImages',
    form: {
      title: 'announcements.form.title',
      category: 'announcements.form.category',
      subcategory: 'announcements.form.subcategory',
      visibility: 'announcements.form.visibility',
      apartments: 'announcements.form.apartments',
      tenants: 'announcements.form.tenants',
      tenantGroups: 'announcements.form.tenantGroups',
      pinToTop: 'announcements.form.pinToTop',
      schedule: 'announcements.form.schedule',
      scheduleAt: 'announcements.form.scheduleAt',
      uploadImages: 'announcements.form.uploadImages',
      uploading: 'announcements.form.uploading',
      removeAllImages: 'announcements.form.removeAllImages',
      imagesCount: 'announcements.form.imagesCount',
    },
    visibilityValues: {
      buildingWide: 'announcements.visibility.buildingWide',
      specificApartments: 'announcements.visibility.specificApartments',
      specificTenants: 'announcements.visibility.specificTenants',
      tenantGroups: 'announcements.visibility.tenantGroups',
    },
    actions: {
      saveDraft: 'announcements.actions.saveDraft',
      publish: 'announcements.actions.publish',
      unpublish: 'announcements.actions.unpublish',
    },
    table: {
      heading: 'announcements.table.heading',
      colTitle: 'announcements.table.colTitle',
      colActions: 'announcements.table.colActions',
      noData: 'announcements.table.noData',
      pin: 'announcements.table.pin',
      unpin: 'announcements.table.unpin',
      archive: 'announcements.table.archive',
      unarchive: 'announcements.table.unarchive',
      delete: 'announcements.table.delete',
    },
    modals: {
      deleteTitle: 'announcements.modals.deleteTitle',
      deleteMessage: 'announcements.modals.deleteMessage',
      removeImagesTitle: 'announcements.modals.removeImagesTitle',
      removeImagesMessage: 'announcements.modals.removeImagesMessage',
    },
    categories: {
      community_general: 'announcements.category.community_general',
      events_activities: 'announcements.category.events_activities',
      maintenance_operations: 'announcements.category.maintenance_operations',
      safety_security: 'announcements.category.safety_security',
      financial_administrative: 'announcements.category.financial_administrative',
      resident_services: 'announcements.category.resident_services',
      voting_governance: 'announcements.category.voting_governance',
      urgent_priority: 'announcements.category.urgent_priority',
    },
    subcategories: {
      general_updates: 'announcements.subcategory.general_updates',
      community_news: 'announcements.subcategory.community_news',
      lost_found: 'announcements.subcategory.lost_found',
      rules_policy_changes: 'announcements.subcategory.rules_policy_changes',
      seasonal_greetings: 'announcements.subcategory.seasonal_greetings',
      resident_welcome_messages: 'announcements.subcategory.resident_welcome_messages',
      upcoming_meetings: 'announcements.subcategory.upcoming_meetings',
      social_events: 'announcements.subcategory.social_events',
      workshops_classes: 'announcements.subcategory.workshops_classes',
      sports_recreational: 'announcements.subcategory.sports_recreational',
      volunteer_opportunities: 'announcements.subcategory.volunteer_opportunities',
      holiday_decorations_competitions: 'announcements.subcategory.holiday_decorations_competitions',
      scheduled_maintenance: 'announcements.subcategory.scheduled_maintenance',
      emergency_maintenance: 'announcements.subcategory.emergency_maintenance',
      renovation_construction_notices: 'announcements.subcategory.renovation_construction_notices',
      utility_outages: 'announcements.subcategory.utility_outages',
      pest_control_schedules: 'announcements.subcategory.pest_control_schedules',
      waste_collection_recycling_updates: 'announcements.subcategory.waste_collection_recycling_updates',
      parking_lot_changes: 'announcements.subcategory.parking_lot_changes',
      fire_drills_safety_training: 'announcements.subcategory.fire_drills_safety_training',
      security_alerts: 'announcements.subcategory.security_alerts',
      weather_alerts: 'announcements.subcategory.weather_alerts',
      emergency_contacts_procedures: 'announcements.subcategory.emergency_contacts_procedures',
      health_safety_protocols: 'announcements.subcategory.health_safety_protocols',
      rent_fee_reminders: 'announcements.subcategory.rent_fee_reminders',
      payment_deadlines: 'announcements.subcategory.payment_deadlines',
      budget_financial_reports: 'announcements.subcategory.budget_financial_reports',
      special_assessments_dues_increases: 'announcements.subcategory.special_assessments_dues_increases',
      insurance_notices: 'announcements.subcategory.insurance_notices',
      tax_related_announcements: 'announcements.subcategory.tax_related_announcements',
      package_delivery_notices: 'announcements.subcategory.package_delivery_notices',
      new_amenities: 'announcements.subcategory.new_amenities',
      internet_wifi_changes: 'announcements.subcategory.internet_wifi_changes',
      facility_booking_confirmations: 'announcements.subcategory.facility_booking_confirmations',
      concierge_updates: 'announcements.subcategory.concierge_updates',
      lost_key_access_card_info: 'announcements.subcategory.lost_key_access_card_info',
      meeting_agendas: 'announcements.subcategory.meeting_agendas',
      voting_announcements: 'announcements.subcategory.voting_announcements',
      poll_results: 'announcements.subcategory.poll_results',
      board_decisions_minutes_summaries: 'announcements.subcategory.board_decisions_minutes_summaries',
      emergency_evacuation_instructions: 'announcements.subcategory.emergency_evacuation_instructions',
      immediate_utility_cutoff_alerts: 'announcements.subcategory.immediate_utility_cutoff_alerts',
      missing_person_pet_alerts: 'announcements.subcategory.missing_person_pet_alerts',
      hazard_warnings: 'announcements.subcategory.hazard_warnings',
    },
    toasts: {
      saveError: 'announcements.toasts.saveError',
      saveSuccess: 'announcements.toasts.saveSuccess',
      publishError: 'announcements.toasts.publishError',
      publishSuccess: 'announcements.toasts.publishSuccess',
      unpublishError: 'announcements.toasts.unpublishError',
      unpublishSuccess: 'announcements.toasts.unpublishSuccess',
      uploadFailed: 'announcements.toasts.uploadFailed',
      imagesUploaded: 'announcements.toasts.imagesUploaded',
      removeImageFailed: 'announcements.toasts.removeImageFailed',
      removeImageSuccess: 'announcements.toasts.removeImageSuccess',
      removeImagesFailed: 'announcements.toasts.removeImagesFailed',
      removeImagesSuccess: 'announcements.toasts.removeImagesSuccess',
      archiveToggleFailed: 'announcements.toasts.archiveToggleFailed',
      archived: 'announcements.toasts.archived',
      unarchived: 'announcements.toasts.unarchived',
      deleteFailed: 'announcements.toasts.deleteFailed',
      deleted: 'announcements.toasts.deleted',
      updateFailed: 'announcements.toasts.updateFailed',
      updateSuccess: 'announcements.toasts.updateSuccess',
      saveDraftBeforeImages: 'announcements.toasts.saveDraftBeforeImages',
    }
  },
  warning: {
    deleteWarningTitle: 'warning.deleteWarningTitle',
    deleteWarningMessage: 'warning.deleteWarningMessage',
  },
  errors: {
    locationPermissionDenied: 'errors.locationPermissionDenied',
    apartment: {
      apartmentNumberMustBeAlphaNumeric: 'errors.apartment.apartmentNumberMustBeAlphaNumeric',
      apartmentNumberMustBeUnique: 'errors.apartment.apartmentNumberMustBeUnique',
    },
    client: {
      clientPaymentMethodError: 'errors.client.clientPaymentMethodError',
      uniqueEmailViolation: 'errors.client.uniqueEmailViolation',
      uniqueCreditCardNumberViolation: 'errors.client.uniqueCreditCardNumberViolation',
      foreignKeyViolation: 'errors.client.foreignKeyViolation',
      notNullViolation: 'errors.client.client.notNullViolation',
      dataTypeMismatch: 'errors.client.dataTypeMismatch',
      checkViolation: 'errors.client.checkViolation',
      unexpectedError: 'errors.client.unexpectedError',
    },
    page: {
      notFound: 'errors.page.notFound',
      notFoundDescription: 'errors.page.notFoundDescription',
      notFoundDescriptionShort: 'errors.page.notFoundDescriptionShort',
    },
    server: {
      serverError: 'errors.serverError.serverError',
      serverErrorDescription: 'errors.serverError.serverErrorDescription',
      serverErrorDescriptionShort: 'errors.serverError.serverErrorDescriptionShort',
    },
    authentification: {
      loginError: 'errors.authentification.loginError',
      loginErrorDescription: 'errors.authentification.loginErrorDescription',
      loginErrorDescriptionShort: 'errors.authentification.loginErrorDescriptionShort',
      logoutError: 'errors.authentification.logoutError',
      logoutErrorDescription: 'errors.authentification.logoutErrorDescription',
      logoutErrorDescriptionShort: 'errors.authentification.logoutErrorDescriptionShort',
      registerError: 'errors.authentification.registerError',
      registerErrorDescription: 'errors.authentification.registerErrorDescription',
      registerErrorDescriptionShort: 'errors.authentification.registerErrorDescriptionShort',
      forgotPasswordError: 'errors.authentification.forgotPasswordError',
    },
    authorization: {
      authorizationError: 'errors.authorization.authorizationError',
      authorizationErrorDescription: 'errors.authorization.authorizationErrorDescription',
      authorizationErrorDescriptionShort: 'errors.authorization.authorizationErrorDescriptionShort',
    },
    unauthorized: {
      header: 'errors.authorization.authorizationError',
      subheader: 'errors.authorization.authorizationErrorDescriptionShort',
      description: 'errors.authorization.authorizationErrorDescription',
    },
  }
};
